type Channel @model @auth(rules: [{ allow: groups, groups: ["SuperAdmin"] }, { allow: owner }]) {
  id: ID!
  chatSpaceId: ID! @index(name: "byChatSpace", queryField: "channelsByChatSpaceId") # For Public purposes
  apiHost: String
  chatflowId: String

  name: String!
  initialPrompts: [InitialPrompt!]
  isPublic: Boolean! @default(value: "false")
}

type InitialPrompt {
  display: String
  prompt: String!
}

type ChannelUserAccess @model @auth(rules: [{ allow: owner }]) {
  # Access ID is concatenation of userId, chatSpaceId, organizationId - with # as delimiter
  # This is to effectively create retrieve a user's access to Channels within a ChatSpace - within a potential Organization
  # organizationId are only used in the case of a Portal ChatSpace - otherwise, they are `_`
  accessId: String! @primaryKey(sortKeyFields: ["channelId"])
  chatSpaceId: ID!

  channelId: ID! @index(name: "byChannel", queryField: "channelUserAccessByChannelId")
  organizationId: ID!
    @index(name: "byOrganization", queryField: "channelUserAccessByOrganizationId")

  channelOwnerId: String!

  role: ChannelUserRole!
  channelName: String!
  channelDescription: String
}

enum ChannelUserRole {
  OWNER ## Can DELETE
  ADMIN ## Can DELETE
  WRITE
  READ
}

type ChannelDocument
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["SuperAdmin"] }
      { allow: groups, groupsField: "admin" }
      { allow: groups, groupsField: "members", operations: [read] }
      { allow: private, operations: [get] } ## TODO: remove this after custom lambda is implemented
      { allow: public, provider: iam, operations: [get] } ## TODO: remove this after custom lambda is implemented
    ]
  ) {
  channelId: ID! @primaryKey(sortKeyFields: ["id"])
  id: ID!

  s3Key: String
  fileType: String
  fileName: String
  fileSize: Int

  admin: String!
  members: [String!]
}

type ChannelItem @model @auth(rules: [{ allow: owner }]) {
  ownerId: ID! @primaryKey(sortKeyFields: ["channelId", "id"])
  channelId: ID!
  id: ID!

  type: ChannelItemType!
  content: String
}

enum ChannelItemType {
  NOTE
  QUESTION
  ANSWER
}
