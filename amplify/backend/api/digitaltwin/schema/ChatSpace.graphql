type ChatSpace
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["SuperAdmin"] }
      { allow: groups, groupsField: "admin" }
      { allow: public, provider: iam, operations: [get] }
    ]
  ) {
  ownerId: ID! @primaryKey(sortKeyFields: ["id"]) ## Organization or User ID
  id: ID!
  name: String!
  isPublic: Boolean!
  isMultiChannel: Boolean!
  defaultChannelId: String

  themeId: String
  language: String # Code Ref
  theme: ChatSpaceTheme
  text: ChatSpaceText
  settings: ChatSpaceSettings!

  admin: String!
}

type ChatSpaceTheme {
  isDark: Boolean
  navbarLogoUrl: String
  primaryColor: String
  primaryAccent: String
  textColor: String
  textSecondary: String
  onPrimary: String
  backgroundColor: String
  backgroundAccent: String
  backgroundImageUrl: String
  bubbleButtonColor: String
  bubbleButtonLogoUrl: String
  drawerBackground: String
  borderColor: String
  textInputTextColor: String
  textInputBackgroundColor: String
  surfaceBackground: String
  surfaceHoveredBackground: String
}

type ChatSpaceText {
  welcomeMessage: String
  returnWelcomeMessage: String
  brandName: String
  inputPlaceholder: String
  suggestedPromptsTitle: String
  viewMedia: String
  close: String
  copyText: String
  copyTextSuccess: String
  share: String
  historyTabTitle: String
  navigationTabTitle: String
  today: String
  yesterday: String
  previous: String
  noHistory: String
}

type ChatSpaceSettings {
  autoOpen: Boolean
}
